<library path="lib/libtk_be_common">
  <!-- Joystick Behavior -->
  <class name="tk_be_common/Joystick" type="telekyb_behavior::Joystick" base_class_type="telekyb::Behavior">
    <description>Joystick Behavior. Defines sensor_msgs::Joy Topic for Joystick Input.</description>
  </class>
  <!-- TrajPlayback Behavior -->
  <class name="tk_be_common/TrajPlayback" type="telekyb_behavior::TrajPlayback" base_class_type="telekyb::Behavior">
    <description>TrajPlayback Behavior. Plays Trajectory File.</description>
  </class>
  <!-- LinearFlyTo Behavior -->
  <class name="tk_be_common/LinearFlyTo" type="telekyb_behavior::LinearFlyTo" base_class_type="telekyb::Behavior">
    <description>Flys to destination with constant velocity.</description>
  </class>
  <!-- LinearFlyTo Behavior -->
  <class name="tk_be_common/SmoothLinearFlyTo" type="telekyb_behavior::SmoothLinearFlyTo" base_class_type="telekyb::Behavior">
    <description>Flys to destination with constant velocity.</description>
  </class>
  <!-- LinearFlyTo Behavior -->
  <class name="tk_be_common/PowerFourLinearTrajectoryFlyTo" type="telekyb_behavior::PowerFourLinearTrajectoryFlyTo" base_class_type="telekyb::Behavior">
    <description>Flys to destination with smooth traajectory.</description>
  </class>
  <!-- DynamicFlyTo Behavior -->
  <class name="tk_be_common/DynamicFlyTo" type="telekyb_behavior::DynamicFlyTo" base_class_type="telekyb::Behavior">
    <description>Flys to destination with constant velocity and slows down at outer radius.</description>
  </class>
  <!-- TrajectoryForceInput Behavior -->
  <class name="tk_be_common/TrajectoryForceInput" type="telekyb_behavior::TrajectoryForceInput" base_class_type="telekyb::Behavior">
    <description>Get the Trajectory and an external force from some other place.</description>
  </class>
  <!-- TrajectoryInput Behavior -->
  <class name="tk_be_common/TrajectoryInput" type="telekyb_behavior::TrajectoryInput" base_class_type="telekyb::Behavior">
    <description>Get the Trajectory from some other place.</description>
  </class>
    <!-- LinearFlyTo Behavior -->
  <class name="tk_be_common/FiltFlyTo" type="telekyb_behavior::FiltFlyTo" base_class_type="telekyb::Behavior">
    <description>Flys to destination with constant velocity.</description>
  </class>
    <!-- Omega6Joy Behavior -->
  <class name="tk_be_common/Omega6Joy" type="telekyb_behavior::Omega6Joy" base_class_type="telekyb::Behavior">
    <description>uses velocity input from omega6 device in world frame.</description>
  </class>
    <!-- RoboCentricOmega6Joy Behavior -->
  <class name="tk_be_common/RoboCentricOmega6Joy" type="telekyb_behavior::RoboCentricOmega6Joy" base_class_type="telekyb::Behavior">
    <description>Uses velocity input from omega6 device in body frame.</description>
  </class>
    <!-- ViconFreeLand Behavior -->
  <class name="tk_be_common/ViconFreeLand" type="telekyb_behavior::ViconFreeLand" base_class_type="telekyb::Behavior">
    <description>Lands with constant velocity, detecting time of impact with ground.</description>
  </class>
  <!-- FixedPointHover Behavior -->
  <class name="tk_be_common/FixedPointHover" type="telekyb_behavior::FixedPointHover" base_class_type="telekyb::Behavior">
    <description>Lands with constant velocity, detecting time of impact with ground.</description>
  </class>
    <!-- Teleoperation Behavior -->
  <class name="tk_be_common/Teleoperation" type="telekyb_behavior::Teleoperation" base_class_type="telekyb::Behavior">
    <description>overwrites commanded values with the ones from the wittenstein sticks.</description>
  </class>
  <!-- Teleoperation Behavior -->
  <class name="tk_be_common/EmergencyEscape" type="telekyb_behavior::EmergencyEscape" base_class_type="telekyb::Behavior">
    <description>performs an emergency maneuver.</description>
  </class>
  <class name="tk_be_common/EmergencyEscape_Calibrate" type="telekyb_behavior::EmergencyEscape_Calibrate" base_class_type="telekyb::Behavior">
    <description>performs an emergency maneuver.</description>
  </class>
</library>

<library path="lib/libtk_be_common_mpcPathFollow">
  <!-- mpc Pathfollow Behavior -->
  <class name="tk_be_common/mpcPathFollow" type="telekyb_behavior::mpcPathFollow" base_class_type="telekyb::Behavior">
    <description>Pathfollowing with an model predictiv control</description>
  </class>
</library>
