<!-- -->

<launch>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="roboID" default="0"/>
  <arg name="X" default="0.0"/>
  <arg name="Y" default="0.0"/>
  <arg name="Z" default="0.18"/>
  <arg name="log_file" default="robot_$(arg roboID)"/>
  <arg name="model" default="$(find telekyb_gazebo)/urdf/firefly_with_ID.gazebo.xacro" />
  <arg name="name" default="firefly_$(arg roboID)"  />
  <arg name="tf_prefix" default="$(arg name)"/>
  <arg name="exclude_floor_link_from_collision_check" default="ground_plane::link"/>
  
    <param name="robot_description" command="
      $(find xacro)/xacro.py '$(arg model)'
      enable_logging:=$(arg enable_logging)
      enable_ground_truth:=$(arg enable_ground_truth)
      exclude_floor_link_from_collision_check:=$(arg exclude_floor_link_from_collision_check)
      log_file:=$(arg log_file)
      robotID:=$(arg roboID)"
    />  

  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
<!--  <node name="spawn_robot_$(arg roboID)" pkg="gazebo_ros" type="spawn_model"
   args="-param robot_description
         -urdf
         -x $(arg X)
         -z $(arg Z)
         -y $(arg Y)
         -model $(arg name)"
   respawn="false" output="screen">-->
       <!-- send the robot XML to param server -->
<!--  </node>-->
  
   <node pkg="robot_state_publisher" type="robot_state_publisher" name="firefly_$(arg roboID)_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
    <param name="robot_description" command="
      $(find xacro)/xacro.py '$(arg model)'
      enable_logging:=$(arg enable_logging)
      enable_ground_truth:=$(arg enable_ground_truth)
      exclude_floor_link_from_collision_check:=$(arg exclude_floor_link_from_collision_check)
      log_file:=$(arg log_file)
      robotID:=$(arg roboID)"
    />
  </node>  
  
</launch>
